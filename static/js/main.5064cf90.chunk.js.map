{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","header","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","stats","stats_item","FeedbackOptions","options","onLeaveFeedback","feedback","map","option","feedback_item","key","feedback_btn","onClick","type","Notification","message","App","state","feedbackCounter","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,WAAa,iC,gBCAjED,EAAOC,QAAU,CAAC,SAAW,kCAAkC,cAAgB,uCAAuC,aAAe,wC,qBCArID,EAAOC,QAAU,CAAC,OAAS,0B,sLCGrBC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,wBAAIC,UAAWC,IAAOC,QAASJ,GAC9BC,IAILF,EAAQM,aAAe,CACrBJ,SAAU,MAQGF,Q,gBCIAO,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,wBAAIT,UAAWC,IAAOS,OACpB,wBAAIV,UAAWC,IAAOU,YAAtB,SAAyCN,EAAzC,KACA,wBAAIL,UAAWC,IAAOU,YAAtB,YAA4CL,GAC5C,wBAAIN,UAAWC,IAAOU,YAAtB,QAAwCJ,GACxC,wBAAIP,UAAWC,IAAOU,YAAtB,UAA0CH,GAC1C,wBAAIR,UAAWC,IAAOU,YAAtB,sBACsBF,EADtB,O,gBCeWG,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,wBAAId,UAAWC,IAAOc,UACnBF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBAAIjB,UAAWC,IAAOiB,cAAeC,IAAKF,GACxC,4BACEjB,UAAWC,IAAOmB,aAClBC,QAAS,kBAAMP,EAAgBG,IAC/BK,KAAK,UAEJL,SCVLM,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,IAE1CD,EAAapB,aAAe,CAC1BqB,QAAS,IAOID,QC0CAE,E,4MAhDbC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,gBAAkB,SAAAV,GAChB,EAAKW,UAAS,SAAAC,GACZ,OAAO,eAAGZ,EAASY,EAAUZ,GAAU,O,EAI3Ca,mBAAqB,kBACnB,EAAKJ,MAAMrB,KAAO,EAAKqB,MAAMpB,QAAU,EAAKoB,MAAMnB,K,EAEpDwB,gCAAkC,kBAChCC,KAAKC,MAAO,EAAKP,MAAMrB,KAAO,EAAKyB,qBAAwB,M,uDAEnD,IAAD,EACwBI,KAAKR,MAA5BrB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,oCACE,kBAAC,EAAD,CAAST,MAAM,yBACb,kBAAC,EAAD,CACEe,QAASsB,OAAOC,KAAKF,KAAKR,OAC1BZ,gBAAiBoB,KAAKP,mBAI1B,kBAAC,EAAD,CAAS7B,MAAM,cACZoC,KAAKJ,qBAAuB,EAC3B,kBAAC,EAAD,CACEzB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO0B,KAAKJ,qBACZrB,mBAAoByB,KAAKH,oCAG3B,kBAAC,EAAD,CAAcP,QAAQ,4B,GAzChBa,a,YCAlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5064cf90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Statistics_stats__1-S_3\",\"stats_item\":\"Statistics_stats_item__2L_Po\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"FeedbackOptions_feedback__3-Ri4\",\"feedback_item\":\"FeedbackOptions_feedback_item__1IGn4\",\"feedback_btn\":\"FeedbackOptions_feedback_btn__1CVuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Section_header__1evO1\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <>\n    <h2 className={styles.header}>{title}</h2>\n    {children}\n  </>\n);\n\nSection.defaultProps = {\n  children: null,\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={styles.stats}>\n    <li className={styles.stats_item}>Good: {good} </li>\n    <li className={styles.stats_item}>Neutral: {neutral}</li>\n    <li className={styles.stats_item}>Bad: {bad}</li>\n    <li className={styles.stats_item}>Total: {total}</li>\n    <li className={styles.stats_item}>\n      Positive feedback: {positivePercentage}%\n    </li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <ul className={styles.feedback}>\n    {options.map(option => (\n      <li className={styles.feedback_item} key={option}>\n        <button\n          className={styles.feedback_btn}\n          onClick={() => onLeaveFeedback(option)}\n          type=\"button\"\n        >\n          {option}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.defaultProps = {\n  message: '',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Section from './Section';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Notification from './Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackCounter = option => {\n    this.setState(prevState => {\n      return { [option]: prevState[option] + 1 };\n    });\n  };\n\n  countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good / this.countTotalFeedback()) * 100);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.feedbackCounter}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}